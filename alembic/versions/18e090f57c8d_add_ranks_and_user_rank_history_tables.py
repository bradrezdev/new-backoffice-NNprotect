"""add_ranks_and_user_rank_history_tables

Revision ID: 18e090f57c8d
Revises: 0e9d2de47d13
Create Date: 2025-09-27 14:51:14.248560

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '18e090f57c8d'
down_revision: Union[str, Sequence[str], None] = '0e9d2de47d13'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ranks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pv_required', sa.Integer(), nullable=False),
    sa.Column('pvg_required', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ranks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ranks_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ranks_name'), ['name'], unique=True)

    op.create_table('userrankhistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=True),
    sa.Column('achieved_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('userrankhistory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_userrankhistory_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_userrankhistory_period_id'), ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_userrankhistory_rank_id'), ['rank_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_userrankhistory_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('userrankhistory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_userrankhistory_user_id'))
        batch_op.drop_index(batch_op.f('ix_userrankhistory_rank_id'))
        batch_op.drop_index(batch_op.f('ix_userrankhistory_period_id'))
        batch_op.drop_index(batch_op.f('ix_userrankhistory_id'))

    op.drop_table('userrankhistory')
    with op.batch_alter_table('ranks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ranks_name'))
        batch_op.drop_index(batch_op.f('ix_ranks_id'))

    op.drop_table('ranks')
    # ### end Alembic commands ###
