"""empty message

Revision ID: caafa6e6e492
Revises: 
Create Date: 2025-09-22 13:09:25.753441

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'caafa6e6e492'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('neighborhood', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country', sa.Enum('USA', 'COLOMBIA', 'MEXICO', 'PUERTO_RICO', name='countries'), nullable=False),
    sa.Column('zip_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_addresses_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_neighborhood'), ['neighborhood'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_state'), ['state'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_street'), ['street'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_zip_code'), ['zip_code'], unique=False)

    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('role_id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_role_id'), ['role_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('NO_QUALIFIED', 'QUALIFIED', 'SUSPENDED', name='userstatus'), nullable=False),
    sa.Column('sponsor_id', sa.Integer(), nullable=True),
    sa.Column('referral_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sponsor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('referral_code')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_member_id'), ['member_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('authcredentials',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('terms_accepted', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('rolesusers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('rolesusers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rolesusers_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_rolesusers_user_id'), ['user_id'], unique=False)

    op.create_table('socialaccounts',
    sa.Column('socialaccount_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.Enum('FACEBOOK', 'INSTAGRAM', 'X', name='socialnetwork'), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('socialaccount_id')
    )
    with op.batch_alter_table('socialaccounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_socialaccounts_provider'), ['provider'], unique=False)
        batch_op.create_index(batch_op.f('ix_socialaccounts_socialaccount_id'), ['socialaccount_id'], unique=False)

    op.create_table('useraddresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('useraddresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_useraddresses_address_name'), ['address_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_useraddresses_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_useraddresses_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_useraddresses_updated_at'), ['updated_at'], unique=False)

    op.create_table('userprofiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='usergender'), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('userprofiles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_userprofiles_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_userprofiles_gender'), ['gender'], unique=False)
        batch_op.create_index(batch_op.f('ix_userprofiles_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_userprofiles_phone_number'), ['phone_number'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('userprofiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_userprofiles_phone_number'))
        batch_op.drop_index(batch_op.f('ix_userprofiles_last_name'))
        batch_op.drop_index(batch_op.f('ix_userprofiles_gender'))
        batch_op.drop_index(batch_op.f('ix_userprofiles_first_name'))

    op.drop_table('userprofiles')
    with op.batch_alter_table('useraddresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_useraddresses_updated_at'))
        batch_op.drop_index(batch_op.f('ix_useraddresses_id'))
        batch_op.drop_index(batch_op.f('ix_useraddresses_created_at'))
        batch_op.drop_index(batch_op.f('ix_useraddresses_address_name'))

    op.drop_table('useraddresses')
    with op.batch_alter_table('socialaccounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_socialaccounts_socialaccount_id'))
        batch_op.drop_index(batch_op.f('ix_socialaccounts_provider'))

    op.drop_table('socialaccounts')
    with op.batch_alter_table('rolesusers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rolesusers_user_id'))
        batch_op.drop_index(batch_op.f('ix_rolesusers_role_id'))

    op.drop_table('rolesusers')
    op.drop_table('authcredentials')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_member_id'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_role_id'))

    op.drop_table('roles')
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_addresses_zip_code'))
        batch_op.drop_index(batch_op.f('ix_addresses_street'))
        batch_op.drop_index(batch_op.f('ix_addresses_state'))
        batch_op.drop_index(batch_op.f('ix_addresses_neighborhood'))
        batch_op.drop_index(batch_op.f('ix_addresses_id'))
        batch_op.drop_index(batch_op.f('ix_addresses_country'))
        batch_op.drop_index(batch_op.f('ix_addresses_city'))

    op.drop_table('addresses')
    # ### end Alembic commands ###
