"""empty message

Revision ID: 8e455f6f1450
Revises: 
Create Date: 2025-10-25 19:17:59.838279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '8e455f6f1450'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('neighborhood', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('zip_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_addresses_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_neighborhood'), ['neighborhood'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_state'), ['state'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_street'), ['street'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_zip_code'), ['zip_code'], unique=False)

    op.create_table('exchangerates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('to_currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('effective_from', sa.DateTime(), nullable=False),
    sa.Column('effective_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('exchangerates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exchangerates_from_currency'), ['from_currency'], unique=False)
        batch_op.create_index(batch_op.f('ix_exchangerates_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exchangerates_to_currency'), ['to_currency'], unique=False)

    op.create_table('periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('starts_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('ends_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('periods', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_periods_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_periods_name'), ['name'], unique=True)

    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('active_ingredient', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('SKU', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('presentation', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('quantity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pv_mx', sa.Integer(), nullable=False),
    sa.Column('pv_usa', sa.Integer(), nullable=False),
    sa.Column('pv_colombia', sa.Integer(), nullable=False),
    sa.Column('vn_mx', sa.Float(), nullable=True),
    sa.Column('vn_usa', sa.Float(), nullable=True),
    sa.Column('vn_colombia', sa.Float(), nullable=True),
    sa.Column('price_mx', sa.Float(), nullable=True),
    sa.Column('price_usa', sa.Float(), nullable=True),
    sa.Column('price_colombia', sa.Float(), nullable=True),
    sa.Column('public_mx', sa.Float(), nullable=True),
    sa.Column('public_usa', sa.Float(), nullable=True),
    sa.Column('public_colombia', sa.Float(), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_id'), ['id'], unique=False)

    op.create_table('ranks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pv_required', sa.Integer(), nullable=False),
    sa.Column('pvg_required', sa.Integer(), nullable=False),
    sa.Column('min_pvg', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ranks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ranks_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ranks_min_pvg'), ['min_pvg'], unique=False)
        batch_op.create_index(batch_op.f('ix_ranks_name'), ['name'], unique=True)

    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('role_id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_role_id'), ['role_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supabase_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_cache', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_cache', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('status', sa.Enum('NO_QUALIFIED', 'QUALIFIED', 'SUSPENDED', name='userstatus'), nullable=False),
    sa.Column('sponsor_id', sa.Integer(), nullable=True),
    sa.Column('referral_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pv_cache', sa.Integer(), nullable=False),
    sa.Column('vn_cache', sa.Float(), nullable=False),
    sa.Column('pvg_cache', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sponsor_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('member_id', name='uq_users_member_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_country_cache'), ['country_cache'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email_cache'), ['email_cache'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_member_id'), ['member_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_pv_cache'), ['pv_cache'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_pvg_cache'), ['pvg_cache'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_referral_link'), ['referral_link'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_supabase_user_id'), ['supabase_user_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_vn_cache'), ['vn_cache'], unique=False)

    op.create_table('authcredentials',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('terms_accepted', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('loyaltypoints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('current_points', sa.Integer(), nullable=False),
    sa.Column('consecutive_months', sa.Integer(), nullable=False),
    sa.Column('last_valid_purchase_date', sa.DateTime(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loyaltypoints', schema=None) as batch_op:
        batch_op.create_index('idx_lp_consecutive', ['consecutive_months'], unique=False)
        batch_op.create_index('idx_lp_member', ['member_id'], unique=False)
        batch_op.create_index('idx_lp_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypoints_current_points'), ['current_points'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypoints_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypoints_member_id'), ['member_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_loyaltypoints_status'), ['status'], unique=False)

    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('shipping_cost', sa.Float(), nullable=False),
    sa.Column('tax', sa.Float(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('total_pv', sa.Integer(), nullable=False),
    sa.Column('total_vn', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('shipping_address_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('payment_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('shipped_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('payment_reference', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('customer_notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('admin_notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['addresses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orders_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_payment_confirmed_at'), ['payment_confirmed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_payment_reference'), ['payment_reference'], unique=True)
        batch_op.create_index(batch_op.f('ix_orders_period_id'), ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_status'), ['status'], unique=False)

    op.create_table('rolesusers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('rolesusers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rolesusers_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_rolesusers_user_id'), ['user_id'], unique=False)

    op.create_table('socialaccounts',
    sa.Column('socialaccount_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.Enum('NONE', 'FACEBOOK', 'INSTAGRAM', 'X', name='socialnetwork'), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('socialaccount_id')
    )
    with op.batch_alter_table('socialaccounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_socialaccounts_provider'), ['provider'], unique=False)
        batch_op.create_index(batch_op.f('ix_socialaccounts_socialaccount_id'), ['socialaccount_id'], unique=False)

    op.create_table('travelcampaigns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('target_points', sa.Integer(), nullable=False),
    sa.Column('is_promo_active', sa.Boolean(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('travelcampaigns', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_travelcampaigns_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_travelcampaigns_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_travelcampaigns_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_travelcampaigns_period_id'), ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_travelcampaigns_start_date'), ['start_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_travelcampaigns_status'), ['status'], unique=False)

    op.create_table('useraddresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('useraddresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_useraddresses_address_name'), ['address_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_useraddresses_id'), ['id'], unique=False)

    op.create_table('userprofiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='usergender'), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('userprofiles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_userprofiles_gender'), ['gender'], unique=False)
        batch_op.create_index(batch_op.f('ix_userprofiles_phone_number'), ['phone_number'], unique=False)

    op.create_table('userrankhistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=True),
    sa.Column('achieved_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('userrankhistory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_userrankhistory_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_userrankhistory_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_userrankhistory_period_id'), ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_userrankhistory_rank_id'), ['rank_id'], unique=False)

    op.create_table('usertreepath',
    sa.Column('sponsor_id', sa.Integer(), nullable=True),
    sa.Column('ancestor_id', sa.Integer(), nullable=False),
    sa.Column('descendant_id', sa.Integer(), nullable=False),
    sa.Column('depth', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ancestor_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['descendant_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['sponsor_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('ancestor_id', 'descendant_id', 'depth')
    )
    with op.batch_alter_table('usertreepath', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_usertreepath_ancestor_id'), ['ancestor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_usertreepath_descendant_id'), ['descendant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_usertreepath_sponsor_id'), ['sponsor_id'], unique=False)

    op.create_table('wallets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('balance >= 0', name='balance_non_negative'),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('wallets', schema=None) as batch_op:
        batch_op.create_index('idx_wallet_member', ['member_id'], unique=False)
        batch_op.create_index('idx_wallet_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallets_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallets_member_id'), ['member_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_wallets_status'), ['status'], unique=False)

    op.create_table('cashback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('generated_by_order_id', sa.Integer(), nullable=False),
    sa.Column('pv_accumulated', sa.Integer(), nullable=False),
    sa.Column('discount_amount', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('applied_to_order_id', sa.Integer(), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['applied_to_order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['generated_by_order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cashback', schema=None) as batch_op:
        batch_op.create_index('idx_cb_applied_order', ['applied_to_order_id'], unique=False)
        batch_op.create_index('idx_cb_expires', ['expires_at'], unique=False)
        batch_op.create_index('idx_cb_generated_order', ['generated_by_order_id'], unique=False)
        batch_op.create_index('idx_cb_member_period', ['member_id', 'period_id'], unique=False)
        batch_op.create_index('idx_cb_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashback_applied_to_order_id'), ['applied_to_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashback_generated_by_order_id'), ['generated_by_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashback_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashback_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashback_period_id'), ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashback_status'), ['status'], unique=False)

    op.create_table('commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('bonus_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('source_member_id', sa.Integer(), nullable=True),
    sa.Column('source_order_id', sa.Integer(), nullable=True),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('level_depth', sa.Integer(), nullable=True),
    sa.Column('amount_vn', sa.Float(), nullable=False),
    sa.Column('currency_origin', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('amount_converted', sa.Float(), nullable=False),
    sa.Column('currency_destination', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('exchange_rate', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.ForeignKeyConstraint(['source_member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['source_order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('commissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_commissions_bonus_type'), ['bonus_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_commissions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_commissions_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_commissions_period_id'), ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_commissions_source_member_id'), ['source_member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_commissions_source_order_id'), ['source_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_commissions_status'), ['status'], unique=False)

    op.create_table('loyaltypointshistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('points_before', sa.Integer(), nullable=False),
    sa.Column('points_after', sa.Integer(), nullable=False),
    sa.Column('points_change', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('purchase_day', sa.Integer(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loyaltypointshistory', schema=None) as batch_op:
        batch_op.create_index('idx_lph_event_type', ['event_type'], unique=False)
        batch_op.create_index('idx_lph_member', ['member_id'], unique=False)
        batch_op.create_index('idx_lph_member_created', ['member_id', 'created_at'], unique=False)
        batch_op.create_index('idx_lph_period', ['period_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypointshistory_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypointshistory_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypointshistory_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltypointshistory_period_id'), ['period_id'], unique=False)

    op.create_table('loyaltyrewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('reward_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('delivery_order_id', sa.Integer(), nullable=True),
    sa.Column('earned_at', sa.DateTime(), nullable=False),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['delivery_order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('loyaltyrewards', schema=None) as batch_op:
        batch_op.create_index('idx_lr_earned', ['earned_at'], unique=False)
        batch_op.create_index('idx_lr_member', ['member_id'], unique=False)
        batch_op.create_index('idx_lr_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltyrewards_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltyrewards_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_loyaltyrewards_status'), ['status'], unique=False)

    op.create_table('nntravelpoints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('points_from_kits', sa.Integer(), nullable=False),
    sa.Column('points_from_self_ranks', sa.Integer(), nullable=False),
    sa.Column('points_from_direct_ranks', sa.Integer(), nullable=False),
    sa.Column('points_bonus', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('qualifies_for_travel', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['travelcampaigns.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('member_id', 'campaign_id', name='uq_member_campaign')
    )
    with op.batch_alter_table('nntravelpoints', schema=None) as batch_op:
        batch_op.create_index('idx_nntp_campaign', ['campaign_id'], unique=False)
        batch_op.create_index('idx_nntp_member_campaign', ['member_id', 'campaign_id'], unique=False)
        batch_op.create_index('idx_nntp_qualifies', ['qualifies_for_travel'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpoints_campaign_id'), ['campaign_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpoints_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpoints_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpoints_qualifies_for_travel'), ['qualifies_for_travel'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpoints_total_points'), ['total_points'], unique=False)

    op.create_table('nntravelpointshistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.Column('source_member_id', sa.Integer(), nullable=True),
    sa.Column('source_order_id', sa.Integer(), nullable=True),
    sa.Column('rank_achieved', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['travelcampaigns.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['source_member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['source_order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('nntravelpointshistory', schema=None) as batch_op:
        batch_op.create_index('idx_nntph_campaign', ['campaign_id'], unique=False)
        batch_op.create_index('idx_nntph_event_type', ['event_type'], unique=False)
        batch_op.create_index('idx_nntph_member', ['member_id'], unique=False)
        batch_op.create_index('idx_nntph_member_created', ['member_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpointshistory_campaign_id'), ['campaign_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpointshistory_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpointshistory_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_nntravelpointshistory_member_id'), ['member_id'], unique=False)

    op.create_table('orderitems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('unit_pv', sa.Integer(), nullable=False),
    sa.Column('unit_vn', sa.Float(), nullable=False),
    sa.Column('line_total', sa.Float(), nullable=False),
    sa.Column('line_pv', sa.Integer(), nullable=False),
    sa.Column('line_vn', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orderitems', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orderitems_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orderitems_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orderitems_product_id'), ['product_id'], unique=False)

    op.create_table('cashbackusage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cashback_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('original_price', sa.Float(), nullable=False),
    sa.Column('discount_applied', sa.Float(), nullable=False),
    sa.Column('final_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cashback_id'], ['cashback.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['order_item_id'], ['orderitems.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cashbackusage', schema=None) as batch_op:
        batch_op.create_index('idx_cbu_cashback', ['cashback_id'], unique=False)
        batch_op.create_index('idx_cbu_order', ['order_id'], unique=False)
        batch_op.create_index('idx_cbu_order_item', ['order_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashbackusage_cashback_id'), ['cashback_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashbackusage_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashbackusage_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashbackusage_order_item_id'), ['order_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cashbackusage_product_id'), ['product_id'], unique=False)

    op.create_table('wallettransactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('balance_before', sa.Float(), nullable=False),
    sa.Column('balance_after', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('commission_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('transfer_to_member_id', sa.Integer(), nullable=True),
    sa.Column('transfer_from_member_id', sa.Integer(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['commission_id'], ['commissions.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['transfer_from_member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['transfer_to_member_id'], ['users.member_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('wallettransactions', schema=None) as batch_op:
        batch_op.create_index('idx_wt_commission', ['commission_id'], unique=False)
        batch_op.create_index('idx_wt_member_created', ['member_id', 'created_at'], unique=False)
        batch_op.create_index('idx_wt_member_status', ['member_id', 'status'], unique=False)
        batch_op.create_index('idx_wt_member_type', ['member_id', 'transaction_type'], unique=False)
        batch_op.create_index('idx_wt_order', ['order_id'], unique=False)
        batch_op.create_index('idx_wt_uuid', ['transaction_uuid'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_commission_id'), ['commission_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_transaction_type'), ['transaction_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_wallettransactions_transaction_uuid'), ['transaction_uuid'], unique=True)

    op.create_table('walletwithdrawals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('wallet_transaction_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('bank_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('account_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('account_holder_name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('rejection_reason', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('requested_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['users.member_id'], ),
    sa.ForeignKeyConstraint(['wallet_transaction_id'], ['wallettransactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('walletwithdrawals', schema=None) as batch_op:
        batch_op.create_index('idx_ww_member', ['member_id'], unique=False)
        batch_op.create_index('idx_ww_requested', ['requested_at'], unique=False)
        batch_op.create_index('idx_ww_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_walletwithdrawals_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_walletwithdrawals_member_id'), ['member_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_walletwithdrawals_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_walletwithdrawals_wallet_transaction_id'), ['wallet_transaction_id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('walletwithdrawals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_walletwithdrawals_wallet_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_walletwithdrawals_status'))
        batch_op.drop_index(batch_op.f('ix_walletwithdrawals_member_id'))
        batch_op.drop_index(batch_op.f('ix_walletwithdrawals_id'))
        batch_op.drop_index('idx_ww_status')
        batch_op.drop_index('idx_ww_requested')
        batch_op.drop_index('idx_ww_member')

    op.drop_table('walletwithdrawals')
    with op.batch_alter_table('wallettransactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_wallettransactions_transaction_uuid'))
        batch_op.drop_index(batch_op.f('ix_wallettransactions_transaction_type'))
        batch_op.drop_index(batch_op.f('ix_wallettransactions_status'))
        batch_op.drop_index(batch_op.f('ix_wallettransactions_order_id'))
        batch_op.drop_index(batch_op.f('ix_wallettransactions_member_id'))
        batch_op.drop_index(batch_op.f('ix_wallettransactions_id'))
        batch_op.drop_index(batch_op.f('ix_wallettransactions_commission_id'))
        batch_op.drop_index('idx_wt_uuid')
        batch_op.drop_index('idx_wt_order')
        batch_op.drop_index('idx_wt_member_type')
        batch_op.drop_index('idx_wt_member_status')
        batch_op.drop_index('idx_wt_member_created')
        batch_op.drop_index('idx_wt_commission')

    op.drop_table('wallettransactions')
    with op.batch_alter_table('cashbackusage', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cashbackusage_product_id'))
        batch_op.drop_index(batch_op.f('ix_cashbackusage_order_item_id'))
        batch_op.drop_index(batch_op.f('ix_cashbackusage_order_id'))
        batch_op.drop_index(batch_op.f('ix_cashbackusage_id'))
        batch_op.drop_index(batch_op.f('ix_cashbackusage_cashback_id'))
        batch_op.drop_index('idx_cbu_order_item')
        batch_op.drop_index('idx_cbu_order')
        batch_op.drop_index('idx_cbu_cashback')

    op.drop_table('cashbackusage')
    with op.batch_alter_table('orderitems', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orderitems_product_id'))
        batch_op.drop_index(batch_op.f('ix_orderitems_order_id'))
        batch_op.drop_index(batch_op.f('ix_orderitems_id'))

    op.drop_table('orderitems')
    with op.batch_alter_table('nntravelpointshistory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nntravelpointshistory_member_id'))
        batch_op.drop_index(batch_op.f('ix_nntravelpointshistory_id'))
        batch_op.drop_index(batch_op.f('ix_nntravelpointshistory_event_type'))
        batch_op.drop_index(batch_op.f('ix_nntravelpointshistory_campaign_id'))
        batch_op.drop_index('idx_nntph_member_created')
        batch_op.drop_index('idx_nntph_member')
        batch_op.drop_index('idx_nntph_event_type')
        batch_op.drop_index('idx_nntph_campaign')

    op.drop_table('nntravelpointshistory')
    with op.batch_alter_table('nntravelpoints', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nntravelpoints_total_points'))
        batch_op.drop_index(batch_op.f('ix_nntravelpoints_qualifies_for_travel'))
        batch_op.drop_index(batch_op.f('ix_nntravelpoints_member_id'))
        batch_op.drop_index(batch_op.f('ix_nntravelpoints_id'))
        batch_op.drop_index(batch_op.f('ix_nntravelpoints_campaign_id'))
        batch_op.drop_index('idx_nntp_qualifies')
        batch_op.drop_index('idx_nntp_member_campaign')
        batch_op.drop_index('idx_nntp_campaign')

    op.drop_table('nntravelpoints')
    with op.batch_alter_table('loyaltyrewards', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loyaltyrewards_status'))
        batch_op.drop_index(batch_op.f('ix_loyaltyrewards_member_id'))
        batch_op.drop_index(batch_op.f('ix_loyaltyrewards_id'))
        batch_op.drop_index('idx_lr_status')
        batch_op.drop_index('idx_lr_member')
        batch_op.drop_index('idx_lr_earned')

    op.drop_table('loyaltyrewards')
    with op.batch_alter_table('loyaltypointshistory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loyaltypointshistory_period_id'))
        batch_op.drop_index(batch_op.f('ix_loyaltypointshistory_member_id'))
        batch_op.drop_index(batch_op.f('ix_loyaltypointshistory_id'))
        batch_op.drop_index(batch_op.f('ix_loyaltypointshistory_event_type'))
        batch_op.drop_index('idx_lph_period')
        batch_op.drop_index('idx_lph_member_created')
        batch_op.drop_index('idx_lph_member')
        batch_op.drop_index('idx_lph_event_type')

    op.drop_table('loyaltypointshistory')
    with op.batch_alter_table('commissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_commissions_status'))
        batch_op.drop_index(batch_op.f('ix_commissions_source_order_id'))
        batch_op.drop_index(batch_op.f('ix_commissions_source_member_id'))
        batch_op.drop_index(batch_op.f('ix_commissions_period_id'))
        batch_op.drop_index(batch_op.f('ix_commissions_member_id'))
        batch_op.drop_index(batch_op.f('ix_commissions_id'))
        batch_op.drop_index(batch_op.f('ix_commissions_bonus_type'))

    op.drop_table('commissions')
    with op.batch_alter_table('cashback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cashback_status'))
        batch_op.drop_index(batch_op.f('ix_cashback_period_id'))
        batch_op.drop_index(batch_op.f('ix_cashback_member_id'))
        batch_op.drop_index(batch_op.f('ix_cashback_id'))
        batch_op.drop_index(batch_op.f('ix_cashback_generated_by_order_id'))
        batch_op.drop_index(batch_op.f('ix_cashback_applied_to_order_id'))
        batch_op.drop_index('idx_cb_status')
        batch_op.drop_index('idx_cb_member_period')
        batch_op.drop_index('idx_cb_generated_order')
        batch_op.drop_index('idx_cb_expires')
        batch_op.drop_index('idx_cb_applied_order')

    op.drop_table('cashback')
    with op.batch_alter_table('wallets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_wallets_status'))
        batch_op.drop_index(batch_op.f('ix_wallets_member_id'))
        batch_op.drop_index(batch_op.f('ix_wallets_id'))
        batch_op.drop_index('idx_wallet_status')
        batch_op.drop_index('idx_wallet_member')

    op.drop_table('wallets')
    with op.batch_alter_table('usertreepath', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usertreepath_sponsor_id'))
        batch_op.drop_index(batch_op.f('ix_usertreepath_descendant_id'))
        batch_op.drop_index(batch_op.f('ix_usertreepath_ancestor_id'))

    op.drop_table('usertreepath')
    with op.batch_alter_table('userrankhistory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_userrankhistory_rank_id'))
        batch_op.drop_index(batch_op.f('ix_userrankhistory_period_id'))
        batch_op.drop_index(batch_op.f('ix_userrankhistory_member_id'))
        batch_op.drop_index(batch_op.f('ix_userrankhistory_id'))

    op.drop_table('userrankhistory')
    with op.batch_alter_table('userprofiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_userprofiles_phone_number'))
        batch_op.drop_index(batch_op.f('ix_userprofiles_gender'))

    op.drop_table('userprofiles')
    with op.batch_alter_table('useraddresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_useraddresses_id'))
        batch_op.drop_index(batch_op.f('ix_useraddresses_address_name'))

    op.drop_table('useraddresses')
    with op.batch_alter_table('travelcampaigns', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_travelcampaigns_status'))
        batch_op.drop_index(batch_op.f('ix_travelcampaigns_start_date'))
        batch_op.drop_index(batch_op.f('ix_travelcampaigns_period_id'))
        batch_op.drop_index(batch_op.f('ix_travelcampaigns_name'))
        batch_op.drop_index(batch_op.f('ix_travelcampaigns_id'))
        batch_op.drop_index(batch_op.f('ix_travelcampaigns_end_date'))

    op.drop_table('travelcampaigns')
    with op.batch_alter_table('socialaccounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_socialaccounts_socialaccount_id'))
        batch_op.drop_index(batch_op.f('ix_socialaccounts_provider'))

    op.drop_table('socialaccounts')
    with op.batch_alter_table('rolesusers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rolesusers_user_id'))
        batch_op.drop_index(batch_op.f('ix_rolesusers_role_id'))

    op.drop_table('rolesusers')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_status'))
        batch_op.drop_index(batch_op.f('ix_orders_period_id'))
        batch_op.drop_index(batch_op.f('ix_orders_payment_reference'))
        batch_op.drop_index(batch_op.f('ix_orders_payment_confirmed_at'))
        batch_op.drop_index(batch_op.f('ix_orders_member_id'))
        batch_op.drop_index(batch_op.f('ix_orders_id'))
        batch_op.drop_index(batch_op.f('ix_orders_country'))

    op.drop_table('orders')
    with op.batch_alter_table('loyaltypoints', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loyaltypoints_status'))
        batch_op.drop_index(batch_op.f('ix_loyaltypoints_member_id'))
        batch_op.drop_index(batch_op.f('ix_loyaltypoints_id'))
        batch_op.drop_index(batch_op.f('ix_loyaltypoints_current_points'))
        batch_op.drop_index('idx_lp_status')
        batch_op.drop_index('idx_lp_member')
        batch_op.drop_index('idx_lp_consecutive')

    op.drop_table('loyaltypoints')
    op.drop_table('authcredentials')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_vn_cache'))
        batch_op.drop_index(batch_op.f('ix_users_supabase_user_id'))
        batch_op.drop_index(batch_op.f('ix_users_referral_link'))
        batch_op.drop_index(batch_op.f('ix_users_pvg_cache'))
        batch_op.drop_index(batch_op.f('ix_users_pv_cache'))
        batch_op.drop_index(batch_op.f('ix_users_member_id'))
        batch_op.drop_index(batch_op.f('ix_users_last_name'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_first_name'))
        batch_op.drop_index(batch_op.f('ix_users_email_cache'))
        batch_op.drop_index(batch_op.f('ix_users_country_cache'))

    op.drop_table('users')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_role_id'))

    op.drop_table('roles')
    with op.batch_alter_table('ranks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ranks_name'))
        batch_op.drop_index(batch_op.f('ix_ranks_min_pvg'))
        batch_op.drop_index(batch_op.f('ix_ranks_id'))

    op.drop_table('ranks')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_id'))

    op.drop_table('products')
    with op.batch_alter_table('periods', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_periods_name'))
        batch_op.drop_index(batch_op.f('ix_periods_id'))

    op.drop_table('periods')
    with op.batch_alter_table('exchangerates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exchangerates_to_currency'))
        batch_op.drop_index(batch_op.f('ix_exchangerates_id'))
        batch_op.drop_index(batch_op.f('ix_exchangerates_from_currency'))

    op.drop_table('exchangerates')
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_addresses_zip_code'))
        batch_op.drop_index(batch_op.f('ix_addresses_street'))
        batch_op.drop_index(batch_op.f('ix_addresses_state'))
        batch_op.drop_index(batch_op.f('ix_addresses_neighborhood'))
        batch_op.drop_index(batch_op.f('ix_addresses_id'))
        batch_op.drop_index(batch_op.f('ix_addresses_country'))
        batch_op.drop_index(batch_op.f('ix_addresses_city'))

    op.drop_table('addresses')
    # ### end Alembic commands ###
