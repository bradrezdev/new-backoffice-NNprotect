"""empty message

Revision ID: c86f3fcbb714
Revises: 8977b2cb2747
Create Date: 2025-09-22 09:00:23.572460

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'c86f3fcbb714'
down_revision: Union[str, Sequence[str], None] = '8977b2cb2747'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('role_id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_role_id'), ['role_id'], unique=False)

    op.create_table('rolesusers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('rolesusers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rolesusers_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_rolesusers_user_id'), ['user_id'], unique=False)

    op.create_table('socialaccounts',
    sa.Column('socialaccount_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.Enum('FACEBOOK', 'INSTAGRAM', 'X', name='socialnetwork'), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('socialaccount_id')
    )
    with op.batch_alter_table('socialaccounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_socialaccounts_provider'), ['provider'], unique=False)
        batch_op.create_index(batch_op.f('ix_socialaccounts_socialaccount_id'), ['socialaccount_id'], unique=False)

    op.create_table('userprofiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='usergender'), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('userprofiles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_userprofiles_fullname'), ['fullname'], unique=False)
        batch_op.create_index(batch_op.f('ix_userprofiles_gender'), ['gender'], unique=False)
        batch_op.create_index(batch_op.f('ix_userprofiles_phone_number'), ['phone_number'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('userprofiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_userprofiles_phone_number'))
        batch_op.drop_index(batch_op.f('ix_userprofiles_gender'))
        batch_op.drop_index(batch_op.f('ix_userprofiles_fullname'))

    op.drop_table('userprofiles')
    with op.batch_alter_table('socialaccounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_socialaccounts_socialaccount_id'))
        batch_op.drop_index(batch_op.f('ix_socialaccounts_provider'))

    op.drop_table('socialaccounts')
    with op.batch_alter_table('rolesusers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rolesusers_user_id'))
        batch_op.drop_index(batch_op.f('ix_rolesusers_role_id'))

    op.drop_table('rolesusers')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_role_id'))

    op.drop_table('roles')
    # ### end Alembic commands ###
